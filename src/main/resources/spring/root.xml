<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
">
    <context:annotation-config/>

    <context:component-scan base-package="zhh.ap.dao,zhh.ap.service">
        <!-- <context:exclude-filter type="regex" expression="com.wy2.work.web.*" /> -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:database/jdbc.properties</value>
                <value>classpath:email/email.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <!-- 数据库基本信息配置 -->
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="filters" value="${jdbc.filters}"/>
        <!-- 最大并发连接数 -->
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <!-- 初始化连接数量 -->
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${jdbc.maxWait}"/>
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="${jdbc.minIdle}"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${jdbc.validationQuery}"/>
        <!--  <property name="testWhileIdle" value="${testWhileIdle}" />
          <property name="testOnBorrow" value="${testOnBorrow}" />
          <property name="testOnReturn" value="${testOnReturn}" />
          <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />-->
        <!-- 打开removeAbandoned功能 -->
        <!--  <property name="removeAbandoned" value="${removeAbandoned}" />
          &lt;!&ndash; 1800秒，也就是30分钟 &ndash;&gt;
          <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
          &lt;!&ndash; 关闭abanded连接时输出错误日志 &ndash;&gt;
          <property name="logAbandoned" value="${logAbandoned}" />-->
    </bean>

    <bean id="sqlSessionFactoryApp" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 加载mybatis.cfg.xml文件 -->
        <property name="configLocation" value="classpath:mybatis/mybatis-cfg.xml"/>
        <!-- 自动扫描需要定义类别名的包，将包内的JAVA类的类名作为类别名 -->
        <!-- <property name="typeAliasesPackage" value="com.wy2.work.entities.hibernate"></property> -->
        <!-- mapper扫描 -->
        <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"/>
    </bean>

    <!-- 自动扫描所有的Mapper接口与文件 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="zhh.ap.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryApp"/>
    </bean>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactoryApp"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- Mail Sender 发送邮件-->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${email.host}"/>
        <property name="password" value="${email.password}"/>
        <property name="port" value="${email.port}"/>
        <property name="username" value="${email.username}"/>
        <property name="defaultEncoding" value="${email.defaultEncoding}"/>
        <property name="protocol" value="${email.protocol}"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">true</prop>
            </props>
        </property>
    </bean>

    <bean id="emailUtil" class="zhh.ap.util.email.EmailUtil">
        <property name="mailSender" ref="mailSender"/>
        <property name="fromEmailAddress" value="${email.fromEmailAddress}"/>
    </bean>

    <tx:annotation-driven/>

</beans>